<Window x:Class="SilkShield_New.View.New_Inventory"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Height="697" Width="868" MaxHeight="697" MaxWidth="868" Background="White">

    <Grid>
        <!-- Title -->
        <TextBlock HorizontalAlignment="Left"
                   Margin="28,22,0,0"
                   TextWrapping="Wrap"
                   Text="New Inventory"
                   VerticalAlignment="Top"
                   Height="52"
                   Width="230"
                   FontSize="32"
                   FontWeight="Bold"
                   FontFamily="Dubai Medium"/>

        <!-- Card background -->
        <Rectangle HorizontalAlignment="Left"
        Height="544"
        Margin="42,97,0,0"
        Stroke="DarkGray"
        VerticalAlignment="Top"
        Width="758"
        RadiusX="20"
        RadiusY="20"/>
        <!-- Section Title -->
        <TextBlock HorizontalAlignment="Left"
                   Margin="58,119,0,0"
                   TextWrapping="Wrap"
                   Text="Item Information"
                   VerticalAlignment="Top"
                   Height="28"
                   Width="200"
                   FontSize="20"
                   FontFamily="Arial" Foreground="#FF292727"/>

        <!-- Item Name Label -->
        <TextBlock HorizontalAlignment="Left"
                   Height="24"
                   Margin="79,171,0,0"
                   TextWrapping="Wrap"
                   Text="Item Name"
                   VerticalAlignment="Top"
                   Width="100"
                   FontWeight="Bold"
                   FontSize="16"/>

        <!-- Item Name Input with Placeholder -->
        <Grid Margin="77,210,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">
            <Border 
                CornerRadius="10"
                BorderBrush="DarkGray"
                BorderThickness="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid>
                    <!-- TextBox -->
                    <TextBox x:Name="ItemName"
                         Text="{Binding ItemName, UpdateSourceTrigger=PropertyChanged}"
                         Background="Transparent"
                         BorderThickness="0"
                         VerticalContentAlignment="Center"
                         Padding="8,0,0,0"
                         FontSize="14" Margin="0,-2,0,2"/>

                    <!-- Placeholder -->
                    <TextBlock Text="Input Name"
                           Foreground="Gray"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Margin="12,0,0,0"
                           IsHitTestVisible="False" FontSize="13">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=ItemName}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </Grid>

        <TextBlock HorizontalAlignment="Left"
            Height="21"
            Margin="77,272,0,0"
            TextWrapping="Wrap"
            Text="Catagory"
            VerticalAlignment="Top"
            Width="100"
            FontWeight="Bold"
            FontSize="16"/>

        <!--category textbox and placeholder-->
        <Grid Margin="77,310,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">
            <Border 
         CornerRadius="10"
         BorderBrush="DarkGray"
         BorderThickness="1"
         HorizontalAlignment="Stretch"
         VerticalAlignment="Stretch">

                <Grid>
                    <!-- ComboBox -->
                    <ComboBox x:Name="Category" 
                              Background="Transparent" 
                              SelectedItem="{Binding SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              BorderThickness="0" 
                              VerticalContentAlignment="Center" 
                              Padding="8,0,0,0" FontSize="14" 
                              IsEditable="True" Margin="5,2,7,3" 
                              Grid.ColumnSpan="2">

                        <ComboBoxItem>Fabric</ComboBoxItem>
                        <ComboBoxItem>Blinds</ComboBoxItem>
                        <ComboBoxItem>Accessories</ComboBoxItem>
                    </ComboBox>


                    <!-- Placeholder -->
                    <TextBlock Text="Select Category"
                       Foreground="Gray"
                       FontSize="14"
                       Padding="8,0,0,0"
                       IsHitTestVisible="False"
                       VerticalAlignment="Center"
                       Margin="5,2,7,3">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when ComboBox text is empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=Category}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </Grid>

        <TextBlock HorizontalAlignment="Left"
            Height="18"
            Margin="77,374,0,0"
            TextWrapping="Wrap"
            Text="Material"
            VerticalAlignment="Top"
            Width="100"
            FontWeight="Bold"
            FontSize="16"/>

        <!--Material textbox and placeholder-->
        <Grid Margin="77,412,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">

            <Border 
             CornerRadius="10"
             BorderBrush="DarkGray"
             BorderThickness="1"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch">

                <Grid>
                    <!-- TextBox -->
                    <TextBox x:Name="Material"
                    Text="{Binding Material, UpdateSourceTrigger=PropertyChanged}"
                    Background="Transparent"
                    BorderThickness="0"
                    VerticalContentAlignment="Center"
                    Padding="8,0,0,0"
                    FontSize="14" Width="198" />

                    <!-- Placeholder -->
                    <TextBlock Text="Material"
                    Foreground="Gray"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Margin="11,0,0,0" FontSize="13"
                    >
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=Material}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </Grid>


        <!--Measuring Unit textbox and placeholder-->
        <Grid Margin="77,520,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">
            <Border 
             CornerRadius="10"
             BorderBrush="DarkGray"
             BorderThickness="1"
             HorizontalAlignment="Stretch"
             VerticalAlignment="Stretch"
            >
                <Grid>
                    <ComboBox x:Name="MeasuringUnit" 
                              SelectedItem="{Binding SelectedMeasuringUnit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Background="Transparent" 
                              BorderThickness="0" 
                              VerticalContentAlignment="Center" 
                              Padding="8,0,0,0" FontSize="14" 
                              IsEditable="True" Margin="5,2,7,3" 
                              Grid.ColumnSpan="2">

                        <ComboBoxItem>Meter (m)</ComboBoxItem>
                        <ComboBoxItem>Square Meter (sqm)</ComboBoxItem>
                        <ComboBoxItem>Square Feet (sft)</ComboBoxItem>
                        <ComboBoxItem>Feet (ft)</ComboBoxItem>
                        <ComboBoxItem>Pieces</ComboBoxItem>
                        <ComboBoxItem>Roll</ComboBoxItem>

                    </ComboBox>

                    <!-- Placeholder TextBlock -->
                    <TextBlock Text="Select Measuring Unit"
                       Foreground="Gray"
                       FontSize="14"
                       Padding="8,0,0,0"
                       IsHitTestVisible="False"
                       VerticalAlignment="Center"
                       Margin="5,2,7,3">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when ComboBox text is empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=MeasuringUnit}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </Border>
        </Grid>
        <TextBlock HorizontalAlignment="Left"
            Height="28"
            Margin="79,483,0,0"
            TextWrapping="Wrap"
            Text="Measuring Unit"
            VerticalAlignment="Top"
            Width="135"
            FontWeight="Bold"
            FontSize="16" RenderTransformOrigin="0.222,0.555"/>



        <Rectangle HorizontalAlignment="Left" Height="256" Margin="426,189,0,0" Stroke="DarkGray" VerticalAlignment="Top" Width="272" RadiusX="20" RadiusY="20"/>

        <TextBlock HorizontalAlignment="Left"
            Margin="474,203,0,0"
            TextWrapping="Wrap"
            Text="Pricing &amp; Stock"
            VerticalAlignment="Top"
            Height="28"
            Width="148"
            FontSize="20"
            FontFamily="Arial" Foreground="#FF292727"/>
        <TextBlock HorizontalAlignment="Left"
            Height="28"
            Margin="464,255,0,0"
            TextWrapping="Wrap"
            Text="Unit Price(LKR)"
            VerticalAlignment="Top"
            Width="136"
            FontWeight="Bold"
            FontSize="16" RenderTransformOrigin="0.222,0.555"/>

        <Grid Margin="464,289,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">
            <Border 
            CornerRadius="10"
            BorderBrush="DarkGray"
            BorderThickness="1"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
                <Grid>
                    <!-- TextBox -->
                    <TextBox x:Name="UnitPrice"
                     Text="{Binding UnitPrice, UpdateSourceTrigger=PropertyChanged}"
                     Background="Transparent"
                     BorderThickness="0"
                     VerticalContentAlignment="Center"
                     Padding="8,0,0,0"
                     FontSize="14" Margin="0,-2,0,2"/>

                    <!-- Placeholder -->
                    <TextBlock Text="Input Price"
       Foreground="Gray"
       VerticalAlignment="Center"
       HorizontalAlignment="Left"
       Margin="12,0,0,0"
       IsHitTestVisible="False" FontSize="13">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=UnitPrice}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </Grid>
        <TextBlock HorizontalAlignment="Left"
            Height="28"
            Margin="460,355,0,0"
            TextWrapping="Wrap"
            Text="Stock"
            VerticalAlignment="Top"
            Width="136"
            FontWeight="Bold"
            FontSize="16" RenderTransformOrigin="0.222,0.555"/>

        <Grid Margin="460,389,0,0" Height="38" HorizontalAlignment="Left" Width="200" VerticalAlignment="Top">
            <Border 
                CornerRadius="10"
                BorderBrush="DarkGray"
                BorderThickness="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid>
                    <!-- TextBox -->
                    <ComboBox x:Name="Stock"
          ItemsSource="{Binding StockStatusList}"
          SelectedItem="{Binding SelectedStockStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          Background="Transparent"
          BorderThickness="0"
          VerticalContentAlignment="Center"
          Padding="8,0,0,0"
          FontSize="14"
          Margin="5,5,5,4"
          IsEditable="True" 
                        />


                    <!-- Placeholder -->
                    <TextBlock Text="Select Status"
                       Foreground="Gray"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="10,0,0,0"
                       IsHitTestVisible="False" FontSize="13">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <!-- Show placeholder only when empty -->
                                    <DataTrigger Binding="{Binding Text.Length, ElementName=Stock}" Value="0">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>

            </Border>
        </Grid>

        <Grid Margin="158,511,22,59">
            <!-- Position buttons at bottom -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- SAVE Button -->
            <Button x:Name="btnsave"
        Grid.Column="1"
        Content="SAVE"
        Background="#FF5B281C"
        Foreground="White"
        FontSize="15"
        FontFamily="Segoe UI"
        FontWeight="SemiBold"
        Width="110"
        Height="40"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Command="{Binding SaveCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    CornerRadius="12"
                    BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                        </Border>

                        <!-- Triggers for hover, pressed, and disabled states -->
                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF804031"/>
                                <!-- Slightly lighter -->
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <!-- Pressed effect -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4A1E16"/>
                                <!-- Slightly darker -->
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>


            <!-- CLEAR Button -->
            <Button x:Name="btnclear"
            Grid.Column="2"
            Content="CLEAR"
            Background="#FF5B281C"
            Foreground="White"
            FontSize="15"
            FontFamily="Segoe UI"
            FontWeight="SemiBold"
            Width="110"
            Height="40"
            Margin="20,0,0,0"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
             Command="{Binding ClearCommand}"       >
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
    Background="{TemplateBinding Background}"
    CornerRadius="12"
    BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                  VerticalAlignment="Center"/>
                        </Border>

                        <!-- Triggers for hover, pressed, and disabled states -->
                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF804031"/>
                                <!-- Slightly lighter -->
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <!-- Pressed effect -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4A1E16"/>
                                <!-- Slightly darker -->
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!-- CANCEL Button -->
            <Button x:Name="btncancel"
            Grid.Column="3"
            Content="CANCEL"
            Background="#FF5B281C"
            Foreground="White"
            FontSize="15"
            FontFamily="Segoe UI"
            FontWeight="SemiBold"
            Width="110"
            Height="40"
            HorizontalAlignment="Left"
            VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="20,0,0,0"
              Command="{Binding CancelCommand}"      >
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
    Background="{TemplateBinding Background}"
    CornerRadius="12"
    BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center"
                  VerticalAlignment="Center"/>
                        </Border>

                        <!-- Triggers for hover, pressed, and disabled states -->
                        <ControlTemplate.Triggers>
                            <!-- Hover effect -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF804031"/>
                                <!-- Slightly lighter -->
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>

                            <!-- Pressed effect -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF4A1E16"/>
                                <!-- Slightly darker -->
                            </Trigger>

                            <!-- Disabled state -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="#FFB8B8B8"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>








    </Grid>
</Window> 